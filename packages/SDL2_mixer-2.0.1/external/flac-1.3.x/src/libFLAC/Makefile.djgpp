ifeq ($(CROSS),)
CC=gcc
AS=as
AR=ar
RANLIB=ranlib
else
CC=$(CROSS)-gcc
AS=$(CROSS)-as
AR=$(CROSS)-ar
RANLIB=$(CROSS)-ranlib
endif
DXE3GEN=dxe3gen

INCLUDES=-I. -I./include -I../../include

CFLAGS =-O2 -Wall -W

CPPFLAGS=-DHAVE_STDINT_H -DHAVE_SYS_PARAM_H
CPPFLAGS+= -DFLAC__CPU_IA32 -DFLAC__HAS_NASM -DFLAC__USE_3DNOW -DSIZEOF_VOIDP=4 -DFLAC__ALIGN_MALLOC_DATA
CPPFLAGS+= -DNDEBUG
CPPFLAGS+= -DENABLE_64_BIT_WORDS=0 -DFLAC__HAS_X86INTRIN=0
CPPFLAGS+= -DFLAC__HAS_OGG=1
CPPFLAGS+= -DPACKAGE_VERSION=\"1.3.0\"

COMPILE=$(CC) $(CFLAGS) $(CPPFLAGS) $(INCLUDES)

OBJ=cpu_asm.o fixed_asm.o lpc_asm.o bitmath.o bitreader.o cpu.o crc.o fixed.o float.o format.o lpc.o md5.o memory.o stream_decoder.o ogg_decoder_aspect.o ogg_helper.o ogg_mapping.o

all: libFLAC.a libFLAC_dxe.a FLAC.dxe

libFLAC.a: $(OBJ)
	$(AR) cru $@ $(OBJ)
	$(RANLIB) $@

libFLAC_dxe.a: FLAC.dxe
FLAC.dxe: $(OBJ)
	-$(DXE3GEN) -Y libFLAC_dxe.a -o $@ -E _FLAC_ -U  $^

%.o: %.c
	$(COMPILE) -c -o $@ $<

%.o: ia32/%.nasm
	nasm -Iia32/ -f coff -dOBJ_FORMAT_coff -o $@ $<

clean:
	rm -rf *.o
distclean: clean
	rm -rf *.a *.dxe