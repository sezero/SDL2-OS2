From ba2b219d9de68993d2bd2090064c4db49b2da425 Mon Sep 17 00:00:00 2001
From: sezero <sezero@users.sourceforge.net>
Date: Sat, 10 Nov 2018 17:00:02 +0300
Subject: [PATCH] os.h: cleanup the _MSC_VER cpp checks mess.

---
 lib/os.h | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

diff --git a/lib/os.h b/lib/os.h
index e0989263..2eafb1d2 100644
--- a/lib/os.h
+++ b/lib/os.h
@@ -117,10 +117,8 @@ static inline int vorbis_ftoi(double f){  /* yes, double!  Otherwise,
 #endif /* Special i386 GCC implementation */
 
 
-/* MSVC inline assembly. 32 bit only; inline ASM isn't implemented in the
- * 64 bit compiler and doesn't work on arm. */
-#if defined(_MSC_VER) && !defined(_WIN64) && \
-      !defined(_WIN32_WCE) && !defined(_M_ARM) && !defined(_M_ARM64)
+/* MSVC inline assembly. 32 bit X86 only. */
+#if defined(_MSC_VER) && defined(_M_IX86) && !defined(_WIN32_WCE)
 #  define VORBIS_FPU_CONTROL
 
 typedef ogg_int16_t vorbis_fpu_control;
@@ -147,7 +145,7 @@ static __inline void vorbis_fpu_restore(vorbis_fpu_control fpu){
 
 /* Optimized code path for x86_64 builds. Uses SSE2 intrinsics. This can be
    done safely because all x86_64 CPUs supports SSE2. */
-#if (defined(_MSC_VER) && defined(_WIN64)) || (defined(__GNUC__) && defined (__x86_64__))
+#if (defined(_MSC_VER) && defined(_M_X64)) || (defined(__GNUC__) && defined (__x86_64__))
 #  define VORBIS_FPU_CONTROL
 
 typedef ogg_int16_t vorbis_fpu_control;
